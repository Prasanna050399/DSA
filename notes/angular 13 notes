what is angular : 
	angular development platform that is built on the typescript programming language.
	maintained by google
	prime objective to develop single page applications
	it is an application-design framework and development platform for creating efficient and sophisticated single page apps.
	
	
	
	as a platform, it includes : 
		a component-based framework for building scalable web applications.
		a collection of libraries that cover a wide veriety of features like : 
			routing
			forms management
			client-server communication
			etc
		a suite of developer tools to help you develop, build, test and update your code
	
	
	angular vs react : 
		react is an open source JS library
		angular is a framework based on typescript
		
		react uses one way data binding and virtual dom trees
		angular uses two way data binding and real dom 
		
		react is faster than angular because it has a smaller bundle size.
		
		angular is used for building mobile, desktop web applications, mostly used to build enterprise grade apps like single page apps and progressive web apps.
		react is used for creating interactive and complex user interfaces.
		
		In comparison to Angular, React is faster and easier to learn. Angular has a steeper learning curve due to several in-built functionalities, so it takes more time initially. React has a shorter learning curve due to its simple structure, use of plain JavaScript, and small package size.
		
		https://www.simform.com/blog/angular-vs-react/#:~:text=How%20is%20React%20different%20from,has%20a%20smaller%20bundle%20size.

setting up local environment and workspace : 
	to install angular we need the following : 
		node.js : 
			angular needs node installed
		npm package manager : 
			angular, angular cli and angular applications depends on npm packages for many features and functions. To download and install npm packages, we need npm package manager. npm client command line interface is installed by default with node.js
			
	
	angular CLI : 
		using angular cli, we can create angular projects, generate applications and library code and perform a variety of ongoing development task such as testing, bundling, and deployment.
		
		installing angular CLI : 
			to install angular cli, run the following command : 
				npm install -g @angular/cli
	
	creating a workspace and initial application : 
		to create a new workspace and initial starter app : 
			1. run the ng new command and provide the name :
				ng new applicatio-name
			2. ng new command prompts for information about the features to include in the initial application.
		
		the angular cli will install necessary angular packages and other dependencies.
		this will create a new workspace and a simple application ready to run.
		
	run the application : 
		the angular cli includes a server for us to build and run the app locally
		To run the application locally run the following command in the application folder:
			ng serve
			
		The ng serve command launches the server and also keeps watching the file, so if there is any change to the file, it rebuilds the application at run time so we dont have to restart the server for each change.
		
		We can also add an option to the ng serve command : 
			--open (-o) : this automatically opens the browser to http://localhost:4200/
			
			
Understanding angular : 
	To understand the capabilities of angular framework, we need to learn about :
		components :
			components are the main building blocks of angular applications
			a component consists of : 
				html template that declares what renders on the page
				typescript class that defines behavior
				css selector that defines how the component is used in a template
				optionally css style applied to the template
				
		https://v13.angular.io/guide/component-overview
		
		
		templates : 
		directives : 
		dependency injection :
	
	we build angular applications with components. 
	components define areas of responsibility in the UI that let you reuse sets of UI functionality.
	component consists of three things :
		a component class :
			handles data and functionality
		an HTML template : 
			determines the UI
		component-specific styles : 
			define the look and feel
			
	app-root : the first component to load and the container for the other components
	
	for creating a component, we are using the ng commands in the command line
	the command to create a component is : 
		ng generate component component-name
	This command will create three files : 
		component-name.component.html
		component-name.component.ts : 
			this file has the class with the @Component decorator
			it contains an object as a parameter value
			the object contains three properties : 
				selector : "nameThatIdentifiesTheComponent (by default the name of the selector starts with app- followed by the component name)",
				templateUrl : "./htmlFileName.html",
				styleUrls : ["./cssFileName.css"]
		component-name.component.css
	
	The @Component also exports the class which handles the functionality of the component
	
	Communication between the child and the parent component using @Input() and @Output() decorators : 
		To send a property from parent to child component, we write @Input() on class variable of the child component.
		And then we use the selector of the child component as a tag in the template/html of the parent component and then send the property value using a field a in the tag.
		To communicate from child to parent, we use the @Output decorator and an eventEmitter.
		we need to do 
			in child component : 
				@Output() variableName = new EventEmitter()
			
				(click) = "variableName.emit()"
			
			in parent component : 
				<childSelector [inputVar] = "variableName"
				(notify)="methodOfParentComponent()">
				</childSelector>
	